<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5"
         id="WebApp_ID"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
	 http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
    <display-name>taotao-portal-web</display-name>
    <!-- 默认访问页 -->
    <welcome-file-list>
        <welcome-file>index.html</welcome-file>
    </welcome-file-list>
    <!-- post乱码过滤器 -->
    <filter>
        <filter-name>characterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>utf-8</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>characterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!-- 前端控制器 -->
    <servlet>
        <servlet-name>taotao-portal-web</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!-- contextConfigLocation不是必须的， 如果不配置contextConfigLocation， springmvc的配置文件默认在：WEB-INF/servlet的name+"-servlet.xml" -->
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:spring/springmvc.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>taotao-portal-web</servlet-name>
        <!-- 伪静态化
        可以看到我们配置的拦截器拦截的请求是以.html结尾的。我们可以称之为"伪静态"，
        之所以称伪静态是因为我们可以把各种动态请求都写成以.html结尾，这样响应的是动态数据，
        但由于请求是以.html结尾的，浏览器便认为要访问静态资源。
        SEO（搜索引擎优化）便喜欢收录以.html结尾的请求，从而有利于搜索排名
        -->
        <url-pattern>*.html</url-pattern>
    </servlet-mapping>
</web-app>
